Lemon is an optical music recognition program.  It converts musical
scores in the form of TIFF images, to a computer music code called
DARMS (see below).

WARNING: Lemon is the result of research undertaken at the University
of Calgary as a masters thesis.  As such, Lemon is 'alpha' software --
not really ready for public consumption.  It is provided 'as is' for
the curious.  For those interested in the research behind Lemon, see:
"Optical Music Recognition", September 1995, K. Todd Reed, The
University of Calgary.

Running Lemon

Lemon runs under OS/2 Warp, and probably works under 2.x as well,
although it's never been tested.  To install Lemon, unzip lemon.zip in
the root directory of any drive.

eg.
	[c:\] unzip lemon

Run Lemon.

eg.
	[c:\] cd lemon
	[c:\lemon] start lemon

A file dialog will appear.  Select the files to process, then press
OK.  Lemon will load the first (or only) file.  To actually start
recognition, select Recognition Page from the Recognition pull down
menu.  A dialog box will appear, where you can turn on/off the
recognition of any symbol.  For reliable results DON'T turn off
anything, except possibly any of the note heads.  Turning off whole
note recognition can dramatically improve performance (of course, only
do this if there are no whole notes in the piece.)  Lemon does not
recognize time signatures, so you must supply this; 'C' can be used
for common time, otherwise, enter something like '3:8'.

NOTE: If you want to put Lemon in a different directory, you'll have
to change omr.ini.  All instances of \\lemon\\templs will need to be
changed to the new directory.

Optional Command Line Arguments

Lemon takes several command line argument that effect the output
produced by Lemon.

/update-image	Will redisplay the image after staff lines are removed.
/staff-only	Will only recognize the staff lines.
/show-staves	Will draw the recognized staves on the screen.
/show-graph	Will draw a complex graph on the screen, showing the internal
		representation of the image.
/show-music-regions
		Will draw boxes around areas that may contain musical
		features.
/show-symbols	Will draw glyphs for all the symbols recognized.
/eps		Will reproduce any screen output to a Postscript EPS file.
/eps-show-music When used with /eps, will include the music image itself
		in the generated EPS file.  The music is drawn in a light
		grey colour.
/ini=file	Use an ini file other than omr.ini.

DARMS

DARMS (Digital Alternate Representation of Musical Score) is a textual
language to describe music notation.  The following description is 
intended to provide the reader with sufficient knowledge of DARMS to be 
able to understand the DARMS output generated by Lemon.

Space Codes

DARMS uses space codes to describe vertical positions on the staff. 


        10                    --------- = staff line
   ------------ 9
        8
   ------------ 7
        6
   ------------ 5
        4
   ------------ 3
        2
   ------------ 1
        0


Note that space codes do not uniquely determine pitch.  Pitch is
determined by the active space code, clef, and the presence of
accidentals.  Also, space codes that are multiples of 50 signify
transposition; eg. -50 corresponds to the staff below the current
staff (transposition only makes sense when there is more than one
staff per system).  The instruction !-50 makes the staff below the
current staff the active staff for all subsequent instructions.

Duration Codes

Duration codes are mnemonic abbreviations that represent common time 
durations.  These are summarized below.

        W       Whole
        H       Half
        Q       Quarter
        E       Eighth
        S       Sixteenth
        T       Thirty-second
        X       Sixty-fourth
        Y       One-hundred-twenty-eighth
        Z       Two-hundred-fifty-sixth

Duration codes, like notes and rests, can be dotted; eg. Q.. = doubly 
dotted quarter duration.

Notes and Rests

Notes are indicated by giving either a space code, a duration code, or 
both.  If either the space code or duration code is omitted, the space 
code or duration code of the previous note is used.  Chords are written 
as a sequence of notes, separated by commas.

        Examples:
        1W      Whole note at space code 1
        3Q,5,7  A triad with quarter notes at space codes 3, 5 and 7

Rests are identical to notes, except an R precedes the duration code, 
and rests aren't sequenced together with commas.

Symbols

The following table summarizes other DARMS symbols used.

        K ... $         Comment
        !In             Instrument number
        !G              Treble clef
        !F              Bass clef
        !T              Null clef
        !Mn:m           Time signature
        !Kn-            Key signature (n flats)
        !Kn#            Key signature (n sharps)
        /               Regular (thin) barline
        //              Double (thin) barline
        /|              Thin and thick barline
        /:              Begin repeat
        :/              End repeat
        :/:             Begin/end repeat
        *               Natural
        #               Sharp
        -               Flat
        (               Start beam*
        )               End beam*
        Ln              Start/end slur**
        Jn              Start/end tie**
        !Rn:m ... $R    Change rhythm***

Notes
* Parentheses can be repeated to indicate several beams.  When a group 
of parentheses is preceded by a simicolon, the beams are short (ie. 
attached to only one stem).
** When n is odd, L starts a slur, and when n is even, L ends the slur 
started by Ln-1.  Similarly with ties.
*** Rhythm changes are necessary to encode tuplets.  A triplet for 
example, is encoded as !R3:2 5E( 5 5) $R; each eighth note has a 
duratoin of 2/3*1/8 beats.

