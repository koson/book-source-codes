// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 10.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace EmployeeTestProject
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// FromtheListpageclickonEmployees - Test Case 18 - Use 'FromtheListpageclickonEmployeesParams' to pass parameters into this method.
        /// </summary>
        public void FromtheListpageclickonEmployees()
        {
            #region Variable Declarations
            HtmlHyperlink uIEmployeeHyperlink = this.UIBlankPageWindowsInteWindow.UIEmployeeMaintenanceDocument.UIEmployeeHyperlink;
            #endregion

            // Go to web page 'http://localhost:3062/' using new browser instance
            this.UIBlankPageWindowsInteWindow.LaunchUrl(new System.Uri(this.FromtheListpageclickonEmployeesParams.UIBlankPageWindowsInteWindowUrl));

            // Click 'Employee' link
            Mouse.Click(uIEmployeeHyperlink, new Point(19, 8));
        }
        
        /// <summary>
        /// InsertEmployeeoption - Test Case 18
        /// </summary>
        public void InsertEmployeeoption()
        {
            #region Variable Declarations
            HtmlDocument uIEmployeeDocument = this.UIEmployeeWindowsInterWindow.UIEmployeeDocument;
            #endregion

            // Click 'Employee' document
            Mouse.Click(uIEmployeeDocument, new Point(187, 329));
        }
        
        /// <summary>
        /// ClickonInsertnewemployeeoption - Test Case 18
        /// </summary>
        public void ClickonInsertnewemployeeoption()
        {
            #region Variable Declarations
            HtmlDocument uIEmployeeDocument = this.UIEmployeeWindowsInterWindow.UIEmployeeDocument;
            HtmlHyperlink uIInsertnewitemHyperlink = this.UIEmployeeWindowsInterWindow.UIEmployeeDocument.UIInsertnewitemHyperlink;
            #endregion

            // Click 'Employee' document
            Mouse.Click(uIEmployeeDocument, new Point(111, 322));

            // Click 'Insert new item' link
            Mouse.Click(uIInsertnewitemHyperlink, new Point(50, 9));
        }
        
        /// <summary>
        /// EnterallthedetailsfortheemployeeFirst_NameLast_NameMiddle_NameDepartmentOccupationGenderCityStateCountryPhone - Test Case 18 - Use 'EnterallthedetailsfortheemployeeFirst_NameLast_NameMiddle_NameDepartmentOccupationGenderCityStateCountryPhoneParams' to pass parameters into this method.
        /// </summary>
        public void EnterallthedetailsfortheemployeeFirst_NameLast_NameMiddle_NameDepartmentOccupationGenderCityStateCountryPhone()
        {
            #region Variable Declarations
            HtmlEdit uIFirst_NameEdit = this.UIEmployeeWindowsInterWindow.UIEmployeeDocument1.UIFirst_NameEdit;
            HtmlEdit uILast_NameEdit = this.UIEmployeeWindowsInterWindow.UIEmployeeDocument1.UILast_NameEdit;
            HtmlEdit uIMiddle_NameEdit = this.UIEmployeeWindowsInterWindow.UIEmployeeDocument1.UIMiddle_NameEdit;
            HtmlEdit uIDepartmentEdit = this.UIEmployeeWindowsInterWindow.UIEmployeeDocument1.UIDepartmentEdit;
            HtmlEdit uIOccupationEdit = this.UIEmployeeWindowsInterWindow.UIEmployeeDocument1.UIOccupationEdit;
            HtmlEdit uIGenderEdit = this.UIEmployeeWindowsInterWindow.UIEmployeeDocument1.UIGenderEdit;
            HtmlEdit uICityEdit = this.UIEmployeeWindowsInterWindow.UIEmployeeDocument1.UICityEdit;
            HtmlEdit uIStateEdit = this.UIEmployeeWindowsInterWindow.UIEmployeeDocument1.UIStateEdit;
            HtmlEdit uICountryEdit = this.UIEmployeeWindowsInterWindow.UIEmployeeDocument1.UICountryEdit;
            HtmlEdit uIPhoneEdit = this.UIEmployeeWindowsInterWindow.UIEmployeeDocument1.UIPhoneEdit;
            #endregion

            // Type 'Satheesh' in 'First_Name' text box
            uIFirst_NameEdit.Text = this.EnterallthedetailsfortheemployeeFirst_NameLast_NameMiddle_NameDepartmentOccupationGenderCityStateCountryPhoneParams.UIFirst_NameEditText;

            // Type '{Tab}' in 'First_Name' text box
            Keyboard.SendKeys(uIFirst_NameEdit, this.EnterallthedetailsfortheemployeeFirst_NameLast_NameMiddle_NameDepartmentOccupationGenderCityStateCountryPhoneParams.UIFirst_NameEditSendKeys, ModifierKeys.None);

            // Type 'Kumar' in 'Last_Name' text box
            uILast_NameEdit.Text = this.EnterallthedetailsfortheemployeeFirst_NameLast_NameMiddle_NameDepartmentOccupationGenderCityStateCountryPhoneParams.UILast_NameEditText;

            // Type '{Tab}' in 'Last_Name' text box
            Keyboard.SendKeys(uILast_NameEdit, this.EnterallthedetailsfortheemployeeFirst_NameLast_NameMiddle_NameDepartmentOccupationGenderCityStateCountryPhoneParams.UILast_NameEditSendKeys, ModifierKeys.None);

            // Type 'N' in 'Middle_Name' text box
            uIMiddle_NameEdit.Text = this.EnterallthedetailsfortheemployeeFirst_NameLast_NameMiddle_NameDepartmentOccupationGenderCityStateCountryPhoneParams.UIMiddle_NameEditText;

            // Type '{Tab}' in 'Middle_Name' text box
            Keyboard.SendKeys(uIMiddle_NameEdit, this.EnterallthedetailsfortheemployeeFirst_NameLast_NameMiddle_NameDepartmentOccupationGenderCityStateCountryPhoneParams.UIMiddle_NameEditSendKeys, ModifierKeys.None);

            // Type 'IT' in 'Department' text box
            uIDepartmentEdit.Text = this.EnterallthedetailsfortheemployeeFirst_NameLast_NameMiddle_NameDepartmentOccupationGenderCityStateCountryPhoneParams.UIDepartmentEditText;

            // Type '{Tab}' in 'Department' text box
            Keyboard.SendKeys(uIDepartmentEdit, this.EnterallthedetailsfortheemployeeFirst_NameLast_NameMiddle_NameDepartmentOccupationGenderCityStateCountryPhoneParams.UIDepartmentEditSendKeys, ModifierKeys.None);

            // Type 'Architect' in 'Occupation' text box
            uIOccupationEdit.Text = this.EnterallthedetailsfortheemployeeFirst_NameLast_NameMiddle_NameDepartmentOccupationGenderCityStateCountryPhoneParams.UIOccupationEditText;

            // Type '{Tab}' in 'Occupation' text box
            Keyboard.SendKeys(uIOccupationEdit, this.EnterallthedetailsfortheemployeeFirst_NameLast_NameMiddle_NameDepartmentOccupationGenderCityStateCountryPhoneParams.UIOccupationEditSendKeys, ModifierKeys.None);

            // Type 'Male' in 'Gender' text box
            uIGenderEdit.Text = this.EnterallthedetailsfortheemployeeFirst_NameLast_NameMiddle_NameDepartmentOccupationGenderCityStateCountryPhoneParams.UIGenderEditText;

            // Type '{Tab}' in 'Gender' text box
            Keyboard.SendKeys(uIGenderEdit, this.EnterallthedetailsfortheemployeeFirst_NameLast_NameMiddle_NameDepartmentOccupationGenderCityStateCountryPhoneParams.UIGenderEditSendKeys, ModifierKeys.None);

            // Type 'Bangalore' in 'City' text box
            uICityEdit.Text = this.EnterallthedetailsfortheemployeeFirst_NameLast_NameMiddle_NameDepartmentOccupationGenderCityStateCountryPhoneParams.UICityEditText;

            // Type '{Tab}' in 'City' text box
            Keyboard.SendKeys(uICityEdit, this.EnterallthedetailsfortheemployeeFirst_NameLast_NameMiddle_NameDepartmentOccupationGenderCityStateCountryPhoneParams.UICityEditSendKeys, ModifierKeys.None);

            // Type 'Karnataka' in 'State' text box
            uIStateEdit.Text = this.EnterallthedetailsfortheemployeeFirst_NameLast_NameMiddle_NameDepartmentOccupationGenderCityStateCountryPhoneParams.UIStateEditText;

            // Type '{Tab}' in 'State' text box
            Keyboard.SendKeys(uIStateEdit, this.EnterallthedetailsfortheemployeeFirst_NameLast_NameMiddle_NameDepartmentOccupationGenderCityStateCountryPhoneParams.UIStateEditSendKeys, ModifierKeys.None);

            // Type 'India' in 'Country' text box
            uICountryEdit.Text = this.EnterallthedetailsfortheemployeeFirst_NameLast_NameMiddle_NameDepartmentOccupationGenderCityStateCountryPhoneParams.UICountryEditText;

            // Type '{Tab}' in 'Country' text box
            Keyboard.SendKeys(uICountryEdit, this.EnterallthedetailsfortheemployeeFirst_NameLast_NameMiddle_NameDepartmentOccupationGenderCityStateCountryPhoneParams.UICountryEditSendKeys, ModifierKeys.None);

            // Type '1112223334' in 'Phone' text box
            uIPhoneEdit.Text = this.EnterallthedetailsfortheemployeeFirst_NameLast_NameMiddle_NameDepartmentOccupationGenderCityStateCountryPhoneParams.UIPhoneEditText;

            // The control is not available or not valid.

            // Click 'Country' text box
            Mouse.Click(uICountryEdit, new Point(73, 7));

            // Click 'Phone' text box
            Mouse.Click(uIPhoneEdit, new Point(48, 3));

            // Click 'Country' text box
            Mouse.Click(uICountryEdit, new Point(61, 5));

            // Click 'State' text box
            Mouse.Click(uIStateEdit, new Point(60, 2));

            // Click 'Country' text box
            Mouse.Click(uICountryEdit, new Point(55, 11));

            // Click 'State' text box
            Mouse.Click(uIStateEdit, new Point(61, 13));

            // Click 'Country' text box
            Mouse.Click(uICountryEdit, new Point(43, 10));

            // Click 'State' text box
            Mouse.Click(uIStateEdit, new Point(67, 14));

            // Click 'City' text box
            Mouse.Click(uICityEdit, new Point(70, 6));

            // Click 'State' text box
            Mouse.Click(uIStateEdit, new Point(56, 13));

            // Click 'Country' text box
            Mouse.Click(uICountryEdit, new Point(52, 9));
        }
        
        /// <summary>
        /// Afterenteringallthedetailssaveemployeedetail - Test Case 18
        /// </summary>
        public void Afterenteringallthedetailssaveemployeedetail()
        {
            #region Variable Declarations
            HtmlEdit uIPhoneEdit = this.UIEmployeeWindowsInterWindow.UIEmployeeDocument1.UIPhoneEdit;
            HtmlHyperlink uIInsertHyperlink = this.UIEmployeeWindowsInterWindow.UIEmployeeDocument1.UIDetailsTableTable.UIInsertHyperlink;
            #endregion

            // Click 'Phone' text box
            Mouse.Click(uIPhoneEdit, new Point(64, 14));

            // Click 'Insert' link
            Mouse.Click(uIInsertHyperlink, new Point(11, 4));
        }
        
        /// <summary>
        /// AssertMethod1
        /// </summary>
        public void AssertMethod1()
        {
            #region Variable Declarations
            HtmlEdit uIFirst_NameEdit = this.UIEmployeeWindowsInterWindow.UIEmployeeDocument1.UIFirst_NameEdit;
            #endregion

            // Verify that 'First_Name' text box's property 'Text' is not equal to 'null'
            Assert.IsNull(uIFirst_NameEdit.Text, "The First Name is not null");
        }
        
        /// <summary>
        /// AssertMethod2
        /// </summary>
        public void AssertMethod2()
        {
            #region Variable Declarations
            HtmlCell uIItemCell = this.UIEmployeeWindowsInterWindow.UIEmployeeDocument1.UIDetailsTableTable.UIItemCell;
            #endregion

            // Verify that '* * * * *' cell's property 'InnerText' is not equal to 'null'
            Assert.IsNotNull(uIItemCell.InnerText, "The phone no cannot be null");
        }
        
        #region Properties
        public virtual FromtheListpageclickonEmployeesParams FromtheListpageclickonEmployeesParams
        {
            get
            {
                if ((this.mFromtheListpageclickonEmployeesParams == null))
                {
                    this.mFromtheListpageclickonEmployeesParams = new FromtheListpageclickonEmployeesParams();
                }
                return this.mFromtheListpageclickonEmployeesParams;
            }
        }
        
        public virtual EnterallthedetailsfortheemployeeFirst_NameLast_NameMiddle_NameDepartmentOccupationGenderCityStateCountryPhoneParams EnterallthedetailsfortheemployeeFirst_NameLast_NameMiddle_NameDepartmentOccupationGenderCityStateCountryPhoneParams
        {
            get
            {
                if ((this.mEnterallthedetailsfortheemployeeFirst_NameLast_NameMiddle_NameDepartmentOccupationGenderCityStateCountryPhoneParams == null))
                {
                    this.mEnterallthedetailsfortheemployeeFirst_NameLast_NameMiddle_NameDepartmentOccupationGenderCityStateCountryPhoneParams = new EnterallthedetailsfortheemployeeFirst_NameLast_NameMiddle_NameDepartmentOccupationGenderCityStateCountryPhoneParams();
                }
                return this.mEnterallthedetailsfortheemployeeFirst_NameLast_NameMiddle_NameDepartmentOccupationGenderCityStateCountryPhoneParams;
            }
        }
        
        public UIBlankPageWindowsInteWindow UIBlankPageWindowsInteWindow
        {
            get
            {
                if ((this.mUIBlankPageWindowsInteWindow == null))
                {
                    this.mUIBlankPageWindowsInteWindow = new UIBlankPageWindowsInteWindow();
                }
                return this.mUIBlankPageWindowsInteWindow;
            }
        }
        
        public UIEmployeeWindowsInterWindow UIEmployeeWindowsInterWindow
        {
            get
            {
                if ((this.mUIEmployeeWindowsInterWindow == null))
                {
                    this.mUIEmployeeWindowsInterWindow = new UIEmployeeWindowsInterWindow();
                }
                return this.mUIEmployeeWindowsInterWindow;
            }
        }
        #endregion
        
        #region Fields
        private FromtheListpageclickonEmployeesParams mFromtheListpageclickonEmployeesParams;
        
        private EnterallthedetailsfortheemployeeFirst_NameLast_NameMiddle_NameDepartmentOccupationGenderCityStateCountryPhoneParams mEnterallthedetailsfortheemployeeFirst_NameLast_NameMiddle_NameDepartmentOccupationGenderCityStateCountryPhoneParams;
        
        private UIBlankPageWindowsInteWindow mUIBlankPageWindowsInteWindow;
        
        private UIEmployeeWindowsInterWindow mUIEmployeeWindowsInterWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'FromtheListpageclickonEmployees'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class FromtheListpageclickonEmployeesParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'http://localhost:3062/' using new browser instance
        /// </summary>
        public string UIBlankPageWindowsInteWindowUrl = "http://localhost:3062/";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EnterallthedetailsfortheemployeeFirst_NameLast_NameMiddle_NameDepartmentOccupationGenderCityStateCountryPhone'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class EnterallthedetailsfortheemployeeFirst_NameLast_NameMiddle_NameDepartmentOccupationGenderCityStateCountryPhoneParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Satheesh' in 'First_Name' text box
        /// </summary>
        public string UIFirst_NameEditText = "Satheesh";
        
        /// <summary>
        /// Type '{Tab}' in 'First_Name' text box
        /// </summary>
        public string UIFirst_NameEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'Kumar' in 'Last_Name' text box
        /// </summary>
        public string UILast_NameEditText = "Kumar";
        
        /// <summary>
        /// Type '{Tab}' in 'Last_Name' text box
        /// </summary>
        public string UILast_NameEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'N' in 'Middle_Name' text box
        /// </summary>
        public string UIMiddle_NameEditText = "N";
        
        /// <summary>
        /// Type '{Tab}' in 'Middle_Name' text box
        /// </summary>
        public string UIMiddle_NameEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'IT' in 'Department' text box
        /// </summary>
        public string UIDepartmentEditText = "IT";
        
        /// <summary>
        /// Type '{Tab}' in 'Department' text box
        /// </summary>
        public string UIDepartmentEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'Architect' in 'Occupation' text box
        /// </summary>
        public string UIOccupationEditText = "Architect";
        
        /// <summary>
        /// Type '{Tab}' in 'Occupation' text box
        /// </summary>
        public string UIOccupationEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'Male' in 'Gender' text box
        /// </summary>
        public string UIGenderEditText = "Male";
        
        /// <summary>
        /// Type '{Tab}' in 'Gender' text box
        /// </summary>
        public string UIGenderEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'Bangalore' in 'City' text box
        /// </summary>
        public string UICityEditText = "Bangalore";
        
        /// <summary>
        /// Type '{Tab}' in 'City' text box
        /// </summary>
        public string UICityEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'Karnataka' in 'State' text box
        /// </summary>
        public string UIStateEditText = "Karnataka";
        
        /// <summary>
        /// Type '{Tab}' in 'State' text box
        /// </summary>
        public string UIStateEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'India' in 'Country' text box
        /// </summary>
        public string UICountryEditText = "India";
        
        /// <summary>
        /// Type '{Tab}' in 'Country' text box
        /// </summary>
        public string UICountryEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '1112223334' in 'Phone' text box
        /// </summary>
        public string UIPhoneEditText = "1112223334";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIBlankPageWindowsInteWindow : BrowserWindow
    {
        
        public UIBlankPageWindowsInteWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Blank Page";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Blank Page");
            this.WindowTitles.Add("Employee Maintenance");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIEmployeeMaintenanceDocument UIEmployeeMaintenanceDocument
        {
            get
            {
                if ((this.mUIEmployeeMaintenanceDocument == null))
                {
                    this.mUIEmployeeMaintenanceDocument = new UIEmployeeMaintenanceDocument(this);
                }
                return this.mUIEmployeeMaintenanceDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeMaintenanceDocument mUIEmployeeMaintenanceDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIEmployeeMaintenanceDocument : HtmlDocument
    {
        
        public UIEmployeeMaintenanceDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Employee Maintenance";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:3062/";
            this.WindowTitles.Add("Employee Maintenance");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIEmployeeHyperlink
        {
            get
            {
                if ((this.mUIEmployeeHyperlink == null))
                {
                    this.mUIEmployeeHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIEmployeeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "ContentPlaceHolder1_Menu1_HyperLink1_2";
                    this.mUIEmployeeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIEmployeeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIEmployeeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Employee";
                    this.mUIEmployeeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Employee/List.aspx";
                    this.mUIEmployeeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIEmployeeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:3062/Employee/List.aspx";
                    this.mUIEmployeeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIEmployeeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=ContentPlaceHolder1_Menu1_HyperLink1_";
                    this.mUIEmployeeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "4";
                    this.mUIEmployeeHyperlink.WindowTitles.Add("Employee Maintenance");
                    #endregion
                }
                return this.mUIEmployeeHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIEmployeeHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIEmployeeWindowsInterWindow : BrowserWindow
    {
        
        public UIEmployeeWindowsInterWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Employee";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Employee");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIEmployeeDocument UIEmployeeDocument
        {
            get
            {
                if ((this.mUIEmployeeDocument == null))
                {
                    this.mUIEmployeeDocument = new UIEmployeeDocument(this);
                }
                return this.mUIEmployeeDocument;
            }
        }
        
        public UIEmployeeDocument1 UIEmployeeDocument1
        {
            get
            {
                if ((this.mUIEmployeeDocument1 == null))
                {
                    this.mUIEmployeeDocument1 = new UIEmployeeDocument1(this);
                }
                return this.mUIEmployeeDocument1;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeDocument mUIEmployeeDocument;
        
        private UIEmployeeDocument1 mUIEmployeeDocument1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIEmployeeDocument : HtmlDocument
    {
        
        public UIEmployeeDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Employee";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Employee/List.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:3062/Employee/List.aspx";
            this.WindowTitles.Add("Employee");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIInsertnewitemHyperlink
        {
            get
            {
                if ((this.mUIInsertnewitemHyperlink == null))
                {
                    this.mUIInsertnewitemHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIInsertnewitemHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "ContentPlaceHolder1_InsertHyperLink";
                    this.mUIInsertnewitemHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIInsertnewitemHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIInsertnewitemHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Insert new item";
                    this.mUIInsertnewitemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Employee/Insert.aspx";
                    this.mUIInsertnewitemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIInsertnewitemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:3062/Employee/Insert.aspx";
                    this.mUIInsertnewitemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIInsertnewitemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=ContentPlaceHolder1_InsertHyperLink h";
                    this.mUIInsertnewitemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "22";
                    this.mUIInsertnewitemHyperlink.WindowTitles.Add("Employee");
                    #endregion
                }
                return this.mUIInsertnewitemHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIInsertnewitemHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIEmployeeDocument1 : HtmlDocument
    {
        
        public UIEmployeeDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Employee";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Employee/Insert.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:3062/Employee/Insert.aspx";
            this.WindowTitles.Add("Employee");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIFirst_NameEdit
        {
            get
            {
                if ((this.mUIFirst_NameEdit == null))
                {
                    this.mUIFirst_NameEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIFirst_NameEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ContentPlaceHolder1_FormView1_ctl04_ctl00___First_Name_TextBox1";
                    this.mUIFirst_NameEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$ContentPlaceHolder1$FormView1$ctl04$ctl00$__First_Name$TextBox1";
                    this.mUIFirst_NameEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "First_Name";
                    this.mUIFirst_NameEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIFirst_NameEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIFirst_NameEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "DDTextBox";
                    this.mUIFirst_NameEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ContentPlaceHolder1_FormView1_ctl04_c";
                    this.mUIFirst_NameEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "5";
                    this.mUIFirst_NameEdit.WindowTitles.Add("Employee");
                    #endregion
                }
                return this.mUIFirst_NameEdit;
            }
        }
        
        public HtmlEdit UILast_NameEdit
        {
            get
            {
                if ((this.mUILast_NameEdit == null))
                {
                    this.mUILast_NameEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUILast_NameEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ContentPlaceHolder1_FormView1_ctl04_ctl01___Last_Name_TextBox1";
                    this.mUILast_NameEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$ContentPlaceHolder1$FormView1$ctl04$ctl01$__Last_Name$TextBox1";
                    this.mUILast_NameEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Last_Name";
                    this.mUILast_NameEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUILast_NameEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUILast_NameEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "DDTextBox";
                    this.mUILast_NameEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ContentPlaceHolder1_FormView1_ctl04_c";
                    this.mUILast_NameEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "6";
                    this.mUILast_NameEdit.WindowTitles.Add("Employee");
                    #endregion
                }
                return this.mUILast_NameEdit;
            }
        }
        
        public HtmlEdit UIMiddle_NameEdit
        {
            get
            {
                if ((this.mUIMiddle_NameEdit == null))
                {
                    this.mUIMiddle_NameEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIMiddle_NameEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ContentPlaceHolder1_FormView1_ctl04_ctl02___Middle_Name_TextBox1";
                    this.mUIMiddle_NameEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$ContentPlaceHolder1$FormView1$ctl04$ctl02$__Middle_Name$TextBox1";
                    this.mUIMiddle_NameEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Middle_Name";
                    this.mUIMiddle_NameEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIMiddle_NameEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIMiddle_NameEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "DDTextBox";
                    this.mUIMiddle_NameEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ContentPlaceHolder1_FormView1_ctl04_c";
                    this.mUIMiddle_NameEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "7";
                    this.mUIMiddle_NameEdit.WindowTitles.Add("Employee");
                    #endregion
                }
                return this.mUIMiddle_NameEdit;
            }
        }
        
        public HtmlEdit UIDepartmentEdit
        {
            get
            {
                if ((this.mUIDepartmentEdit == null))
                {
                    this.mUIDepartmentEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIDepartmentEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ContentPlaceHolder1_FormView1_ctl04_ctl03___Department_TextBox1";
                    this.mUIDepartmentEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$ContentPlaceHolder1$FormView1$ctl04$ctl03$__Department$TextBox1";
                    this.mUIDepartmentEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Department";
                    this.mUIDepartmentEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIDepartmentEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIDepartmentEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "DDTextBox";
                    this.mUIDepartmentEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ContentPlaceHolder1_FormView1_ctl04_c";
                    this.mUIDepartmentEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "8";
                    this.mUIDepartmentEdit.WindowTitles.Add("Employee");
                    #endregion
                }
                return this.mUIDepartmentEdit;
            }
        }
        
        public HtmlEdit UIOccupationEdit
        {
            get
            {
                if ((this.mUIOccupationEdit == null))
                {
                    this.mUIOccupationEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIOccupationEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ContentPlaceHolder1_FormView1_ctl04_ctl04___Occupation_TextBox1";
                    this.mUIOccupationEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$ContentPlaceHolder1$FormView1$ctl04$ctl04$__Occupation$TextBox1";
                    this.mUIOccupationEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Occupation";
                    this.mUIOccupationEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIOccupationEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIOccupationEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "DDTextBox";
                    this.mUIOccupationEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ContentPlaceHolder1_FormView1_ctl04_c";
                    this.mUIOccupationEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "9";
                    this.mUIOccupationEdit.WindowTitles.Add("Employee");
                    #endregion
                }
                return this.mUIOccupationEdit;
            }
        }
        
        public HtmlEdit UIGenderEdit
        {
            get
            {
                if ((this.mUIGenderEdit == null))
                {
                    this.mUIGenderEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIGenderEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ContentPlaceHolder1_FormView1_ctl04_ctl05___Gender_TextBox1";
                    this.mUIGenderEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$ContentPlaceHolder1$FormView1$ctl04$ctl05$__Gender$TextBox1";
                    this.mUIGenderEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Gender";
                    this.mUIGenderEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIGenderEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIGenderEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "DDTextBox";
                    this.mUIGenderEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ContentPlaceHolder1_FormView1_ctl04_c";
                    this.mUIGenderEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "10";
                    this.mUIGenderEdit.WindowTitles.Add("Employee");
                    #endregion
                }
                return this.mUIGenderEdit;
            }
        }
        
        public HtmlEdit UICityEdit
        {
            get
            {
                if ((this.mUICityEdit == null))
                {
                    this.mUICityEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUICityEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ContentPlaceHolder1_FormView1_ctl04_ctl06___City_TextBox1";
                    this.mUICityEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$ContentPlaceHolder1$FormView1$ctl04$ctl06$__City$TextBox1";
                    this.mUICityEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "City";
                    this.mUICityEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUICityEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUICityEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "DDTextBox";
                    this.mUICityEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ContentPlaceHolder1_FormView1_ctl04_c";
                    this.mUICityEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "11";
                    this.mUICityEdit.WindowTitles.Add("Employee");
                    #endregion
                }
                return this.mUICityEdit;
            }
        }
        
        public HtmlEdit UIStateEdit
        {
            get
            {
                if ((this.mUIStateEdit == null))
                {
                    this.mUIStateEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIStateEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ContentPlaceHolder1_FormView1_ctl04_ctl07___State_TextBox1";
                    this.mUIStateEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$ContentPlaceHolder1$FormView1$ctl04$ctl07$__State$TextBox1";
                    this.mUIStateEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "State";
                    this.mUIStateEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIStateEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIStateEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "DDTextBox";
                    this.mUIStateEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ContentPlaceHolder1_FormView1_ctl04_c";
                    this.mUIStateEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "12";
                    this.mUIStateEdit.WindowTitles.Add("Employee");
                    #endregion
                }
                return this.mUIStateEdit;
            }
        }
        
        public HtmlEdit UICountryEdit
        {
            get
            {
                if ((this.mUICountryEdit == null))
                {
                    this.mUICountryEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUICountryEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ContentPlaceHolder1_FormView1_ctl04_ctl08___Country_TextBox1";
                    this.mUICountryEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$ContentPlaceHolder1$FormView1$ctl04$ctl08$__Country$TextBox1";
                    this.mUICountryEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Country";
                    this.mUICountryEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUICountryEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUICountryEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "DDTextBox";
                    this.mUICountryEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ContentPlaceHolder1_FormView1_ctl04_c";
                    this.mUICountryEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "13";
                    this.mUICountryEdit.WindowTitles.Add("Employee");
                    #endregion
                }
                return this.mUICountryEdit;
            }
        }
        
        public HtmlEdit UIPhoneEdit
        {
            get
            {
                if ((this.mUIPhoneEdit == null))
                {
                    this.mUIPhoneEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPhoneEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ContentPlaceHolder1_FormView1_ctl04_ctl09___Phone_TextBox1";
                    this.mUIPhoneEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$ContentPlaceHolder1$FormView1$ctl04$ctl09$__Phone$TextBox1";
                    this.mUIPhoneEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Phone";
                    this.mUIPhoneEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIPhoneEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPhoneEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "DDTextBox";
                    this.mUIPhoneEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ContentPlaceHolder1_FormView1_ctl04_c";
                    this.mUIPhoneEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "14";
                    this.mUIPhoneEdit.WindowTitles.Add("Employee");
                    #endregion
                }
                return this.mUIPhoneEdit;
            }
        }
        
        public UIDetailsTableTable UIDetailsTableTable
        {
            get
            {
                if ((this.mUIDetailsTableTable == null))
                {
                    this.mUIDetailsTableTable = new UIDetailsTableTable(this);
                }
                return this.mUIDetailsTableTable;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIFirst_NameEdit;
        
        private HtmlEdit mUILast_NameEdit;
        
        private HtmlEdit mUIMiddle_NameEdit;
        
        private HtmlEdit mUIDepartmentEdit;
        
        private HtmlEdit mUIOccupationEdit;
        
        private HtmlEdit mUIGenderEdit;
        
        private HtmlEdit mUICityEdit;
        
        private HtmlEdit mUIStateEdit;
        
        private HtmlEdit mUICountryEdit;
        
        private HtmlEdit mUIPhoneEdit;
        
        private UIDetailsTableTable mUIDetailsTableTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIDetailsTableTable : HtmlTable
    {
        
        public UIDetailsTableTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = "detailsTable";
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "First_Name  * * * \r\nLast_Name  * * * \r\nM";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "id=detailsTable class=DDDetailsTable cel";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "11";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "2";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "DDDetailsTable";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("Employee");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIInsertHyperlink
        {
            get
            {
                if ((this.mUIInsertHyperlink == null))
                {
                    this.mUIInsertHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIInsertHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIInsertHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIInsertHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIInsertHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Insert";
                    this.mUIInsertHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "WebForm_DoPostBackWithOptions(new%20WebForm_PostBackOptions(%22ctl00$ContentPlace" +
                        "Holder1$FormView1$ctl02%22,%20%22%22,%20true,%20%22%22,%20%22%22,%20false,%20tru" +
                        "e))";
                    this.mUIInsertHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIInsertHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:WebForm_DoPostBackWithOptions(new WebForm_PostBackOptions(\"ctl00$Conte" +
                        "ntPlaceHolder1$FormView1$ctl02\", \"\", true, \"\", \"\", false, true))";
                    this.mUIInsertHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIInsertHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\'javascript:WebForm_DoPostBackWithO";
                    this.mUIInsertHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIInsertHyperlink.WindowTitles.Add("Employee");
                    #endregion
                }
                return this.mUIInsertHyperlink;
            }
        }
        
        public HtmlCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUIItemCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUIItemCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUIItemCell.FilterProperties[HtmlCell.PropertyNames.InnerText] = " * * * * * ";
                    this.mUIItemCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = null;
                    this.mUIItemCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "9";
                    this.mUIItemCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "1";
                    this.mUIItemCell.FilterProperties[HtmlCell.PropertyNames.Class] = null;
                    this.mUIItemCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "20";
                    this.mUIItemCell.WindowTitles.Add("Employee");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIInsertHyperlink;
        
        private HtmlCell mUIItemCell;
        #endregion
    }
}
