//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EmployeeTestProject
{
    using System;
    using System.Collections.Generic;
    using System.Text;
    using Microsoft.VisualStudio.TestTools.WebTesting;
    using Microsoft.VisualStudio.TestTools.WebTesting.Rules;
    using ClassLibrary1forPlugIn;


    [DeploymentItem("employeetestproject\\EmpData.csv", "employeetestproject")]
    [DataSource("EmployeeDataSource", "Microsoft.VisualStudio.TestTools.DataSource.CSV", "|DataDirectory|\\employeetestproject\\EmpData.csv", Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAccessMethod.Sequential, Microsoft.VisualStudio.TestTools.WebTesting.DataBindingSelectColumns.SelectOnlyBoundColumns, "EmpData#csv")]
    [DataBinding("EmployeeDataSource", "EmpData#csv", "First_Name", "EmployeeDataSource.EmpData#csv.First_Name")]
    [DataBinding("EmployeeDataSource", "EmpData#csv", "Last_Name", "EmployeeDataSource.EmpData#csv.Last_Name")]
    [DataBinding("EmployeeDataSource", "EmpData#csv", "Middle_Name", "EmployeeDataSource.EmpData#csv.Middle_Name")]
    [DataBinding("EmployeeDataSource", "EmpData#csv", "Department", "EmployeeDataSource.EmpData#csv.Department")]
    [DataBinding("EmployeeDataSource", "EmpData#csv", "Occupation", "EmployeeDataSource.EmpData#csv.Occupation")]
    [DataBinding("EmployeeDataSource", "EmpData#csv", "Gender", "EmployeeDataSource.EmpData#csv.Gender")]
    [DataBinding("EmployeeDataSource", "EmpData#csv", "City", "EmployeeDataSource.EmpData#csv.City")]
    [DataBinding("EmployeeDataSource", "EmpData#csv", "State", "EmployeeDataSource.EmpData#csv.State")]
    [DataBinding("EmployeeDataSource", "EmpData#csv", "Country", "EmployeeDataSource.EmpData#csv.Country")]
    [DataBinding("EmployeeDataSource", "EmpData#csv", "Phone", "EmployeeDataSource.EmpData#csv.Phone")]
    public class WebTestEmpMaintenanceCoded : WebTest
    {

        private Class1 testPlugin0 = new Class1();

        public WebTestEmpMaintenanceCoded()
        {
            this.Context.Add("WebServerName", "http://localhost:3062");
            this.Context.Add("AddAbsenceforEmployee", "Yes");

            this.PreAuthenticate = true;
            this.PreWebTest += new EventHandler<PreWebTestEventArgs>(this.testPlugin0.PreWebTest);
            this.PostWebTest += new EventHandler<PostWebTestEventArgs>(this.testPlugin0.PostWebTest);
            this.PreTransaction += new EventHandler<PreTransactionEventArgs>(this.testPlugin0.PreTransaction);
            this.PostTransaction += new EventHandler<PostTransactionEventArgs>(this.testPlugin0.PostTransaction);
            this.PrePage += new EventHandler<PrePageEventArgs>(this.testPlugin0.PrePage);
            this.PostPage += new EventHandler<PostPageEventArgs>(this.testPlugin0.PostPage);
        }

        public override IEnumerator<WebTestRequest> GetRequestEnumerator()
        {
            // Initialize validation rules that apply to all requests in the WebTest
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.Low))
            {
                ValidateResponseUrl validationRule1 = new ValidateResponseUrl();
                this.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule1.Validate);
            }
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.Low))
            {
                ValidationRuleResponseTimeGoal validationRule2 = new ValidationRuleResponseTimeGoal();
                validationRule2.Tolerance = 0D;
                this.ValidateResponseOnPageComplete += new EventHandler<ValidationEventArgs>(validationRule2.Validate);
            }
            this.PreRequestDataBinding += new EventHandler<PreRequestDataBindingEventArgs>(this.testPlugin0.PreRequestDataBinding);
            this.PreRequest += new EventHandler<PreRequestEventArgs>(this.testPlugin0.PreRequest);
            this.PostRequest += new EventHandler<PostRequestEventArgs>(this.testPlugin0.PostRequest);

            this.AddCommentToResult("Test custom comment added to the Web test through code");

            WebTestRequest request1 = new WebTestRequest((this.Context["WebServerName"].ToString() + "/"));
            request1.ThinkTime = 5;
            yield return request1;
            request1 = null;
            this.BeginTransaction("FirstTransaction");

            WebTestRequest request2 = new WebTestRequest((this.Context["WebServerName"].ToString() + "/Employee/List.aspx"));
            request2.ThinkTime = 4;
            yield return request2;
            request2 = null;

            WebTestRequest request3 = new WebTestRequest((this.Context["WebServerName"].ToString() + "/Employee/Insert.aspx"));
            request3.ThinkTime = 35;
            ExtractHiddenFields extractionRule1 = new ExtractHiddenFields();
            extractionRule1.Required = true;
            extractionRule1.HtmlDecode = true;
            extractionRule1.ContextParameterName = "1";
            request3.ExtractValues += new EventHandler<ExtractionEventArgs>(extractionRule1.Extract);
            yield return request3;
            request3 = null;

            this.EndTransaction("FirstTransaction");


            WebTestRequest request4 = new WebTestRequest((this.Context["WebServerName"].ToString() + "/Employee/Insert.aspx"));
            request4.ThinkTime = 219;
            request4.Method = "POST";
            request4.ExpectedResponseUrl = (this.Context["WebServerName"].ToString() + "/Employee/List.aspx");
            FormPostHttpBody request4Body = new FormPostHttpBody();
            request4Body.FormPostParameters.Add("__EVENTTARGET", "ctl00$ContentPlaceHolder1$FormView1$ctl02");
            request4Body.FormPostParameters.Add("__EVENTARGUMENT", this.Context["$HIDDEN1.__EVENTARGUMENT"].ToString());
            request4Body.FormPostParameters.Add("__VIEWSTATE", this.Context["$HIDDEN1.__VIEWSTATE"].ToString());
            request4Body.FormPostParameters.Add("__EVENTVALIDATION", this.Context["$HIDDEN1.__EVENTVALIDATION"].ToString());
            request4Body.FormPostParameters.Add("ctl00$ContentPlaceHolder1$FormView1$ctl04$ctl00$__First_Name$TextBox1", this.Context["EmployeeDataSource.EmpData#csv.First_Name"].ToString());
            request4Body.FormPostParameters.Add("ctl00$ContentPlaceHolder1$FormView1$ctl04$ctl01$__Last_Name$TextBox1", this.Context["EmployeeDataSource.EmpData#csv.Last_Name"].ToString());
            request4Body.FormPostParameters.Add("ctl00$ContentPlaceHolder1$FormView1$ctl04$ctl02$__Middle_Name$TextBox1", this.Context["EmployeeDataSource.EmpData#csv.Middle_Name"].ToString());
            request4Body.FormPostParameters.Add("ctl00$ContentPlaceHolder1$FormView1$ctl04$ctl03$__Department$TextBox1", this.Context["EmployeeDataSource.EmpData#csv.Department"].ToString());
            request4Body.FormPostParameters.Add("ctl00$ContentPlaceHolder1$FormView1$ctl04$ctl04$__Occupation$TextBox1", this.Context["EmployeeDataSource.EmpData#csv.Occupation"].ToString());
            request4Body.FormPostParameters.Add("ctl00$ContentPlaceHolder1$FormView1$ctl04$ctl05$__Gender$TextBox1", this.Context["EmployeeDataSource.EmpData#csv.Gender"].ToString());
            request4Body.FormPostParameters.Add("ctl00$ContentPlaceHolder1$FormView1$ctl04$ctl06$__City$TextBox1", this.Context["EmployeeDataSource.EmpData#csv.City"].ToString());
            request4Body.FormPostParameters.Add("ctl00$ContentPlaceHolder1$FormView1$ctl04$ctl07$__State$TextBox1", this.Context["EmployeeDataSource.EmpData#csv.State"].ToString());
            request4Body.FormPostParameters.Add("ctl00$ContentPlaceHolder1$FormView1$ctl04$ctl08$__Country$TextBox1", this.Context["EmployeeDataSource.EmpData#csv.Country"].ToString());
            request4Body.FormPostParameters.Add("ctl00$ContentPlaceHolder1$FormView1$ctl04$ctl09$__Phone$TextBox1", this.Context["EmployeeDataSource.EmpData#csv.Phone"].ToString());
            request4.Body = request4Body;
            yield return request4;
            request4 = null;

            if (this.Context["AddAbsenceforEmployee"].ToString() == "Yes")
            {
                WebTestRequest request6 = new WebTestRequest((this.Context["WebServerName"].ToString() + "/Absence/Insert.aspx"));
                request6.ThinkTime = 4;
                yield return request6;
                request6 = null;
            }

            WebTestRequest request5 = new WebTestRequest((this.Context["WebServerName"].ToString() + "/"));
            yield return request5;
            request5 = null;
        }
    }
}
